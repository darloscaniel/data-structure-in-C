#include <stdio.h>
#include <stdlib.h> 

typedef struct cel {
    int valor;
    struct cel *prox;
} Celula;

int main() {
    Celula *lst = NULL;  // Ponteiro para o início da lista
    Celula *nova;        // Ponteiro para um novo nó

    // Criando o primeiro nó
    nova = (Celula*) malloc(sizeof(Celula));
    if (nova == NULL) {  // Verifica se a alocação foi bem-sucedida
        printf("Erro ao alocar memória.\n");
        return 1;
    }
    nova->valor = 10;
    nova->prox = NULL;
    lst = nova; // Lista aponta para o primeiro nó

    // Criando o segundo nó
    nova = (Celula*) malloc(sizeof(Celula));
    if (nova == NULL) {
        printf("Erro ao alocar memória.\n");
        return 1;
    }
    nova->valor = 20;
    nova->prox = NULL;

    lst->prox = nova; // O primeiro nó aponta para o segundo

    // Exibir os valores da lista encadeada
    Celula *p = lst;
    while (p != NULL) {
        printf("%d -> ", p->valor);
        p = p->prox;
    }
    printf("NULL\n");

    // Liberar memória alocada
    Celula *temp;
    p = lst;
    while (p != NULL) {
        temp = p;
        p = p->prox;
        free(temp);
    }

    return 0;
}
